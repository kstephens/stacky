/{ /&mark &exec
  &d_stack &array_top &dict_set
/} /&array_end_exec &exec
  &d_stack &array_top &dict_set
/def { &d_stack &array_top &dict_set } &d_stack &array_top &dict_set
&top /&null &exch def
/[ /&mark &exec def
/] /&array_end &exec def
/<< /&mark &exec def
/>> { &array_end &array_to_dict } def
/pop /&pop &exec def
/dup /&dup &exec def
/exch /&exch &exec def
/counttomark { &v_stack &mark &count_to } def
/arraytomark { counttomark &array_make exch pop } def
/p { &println } def
/. { dup p } def
/print_string {
  "\"" &_stdout &io_write_string
  &_stdout &io_write_string
  "\"" &_stdout &io_write_string
} def
/print_fun {
  "@fun:" &_stdout &io_write_string
  dup &fun_to_string dup
  { &_stdout exch &io_write_string pop }
  { pop &_stdout exch &io_print_voidP }
  &if_else
} def

%{
%  { &mark &dup &type methods &dict_get 0 methods &dict_get &or &exec }
%  methods &set_meta
% }
