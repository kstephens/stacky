# Comment


# k v DEF |
{ exch &dict_stack_top &dict_set }
`def &dict_stack_top &dict_set

`&argv0_symbols 0 &argv array_get 0 &dlopen def
`&extern { &argv0_symbols exch &dlsym } def
`exit { 2 irsh "exit" &extern 1 &c_proc } def

`p {
  &v_stdout &write
  "
" &v_stdout &write_string
} def

`. {
  dup p
} def

`&error { # desc ERROR |
  [ exch `error ] &error_catch &throw
} def

`&typecheck { # val type TYPECHECK |
   exch          # type val
   1 vget        # type val type
   exch          # type type val
   &v_type       # type type type(val)
   eqw           # type type==type(val)
   { pop } { [ swap `typecheck ] &error } ifelse
} def

`dict_keys { # dict |
  bytes_dup exch pop
  [ ] 0 {              # dict [ ] i
    dup 3 vget         # dict [ ] i i dict
    array_get          # dict [ ] i dict[i]
    2 vget array_push  # dict [ k ... ] i
    + 2                # dict [ k ... ] i+2
  } {
    dup        # dict [ k ... ] i+2 i+2
    3 vget     # dict [ k ... ] i+2 i+2 dict 
    array_l <  # dict [ k ... ] i+2 i+2<len(dict)
  } loop       # dict [ k ... ] I
  pop exch pop
} def
